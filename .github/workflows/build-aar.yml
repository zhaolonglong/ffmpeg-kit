name: Build FFmpegKit Android AAR (arm64-v8a only)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - development
    paths:
      - '.github/workflows/build-arm64-v8a.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - main
      - development
    paths:
      - '.github/workflows/build-arm64-v8a.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-android-aar-arm64-v8a:
    name: Build Android AAR (arm64-v8a)
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build python3 unzip

      - name: Set up AdoptOpenJDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Android NDK r25c
        run: |
          curl -s "https://dl.google.com/android/repository/android-ndk-r25c-linux.zip" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/android-ndk-r25c" >> $GITHUB_ENV

      - name: Ensure android.sh is executable
        run: chmod +x android.sh

      - name: Build ffmpeg-kit (LTS, arm64-v8a only)
        run: |
          run: ./android.sh --lts --enable-android-media-codec --enable-android-zlib --disable-x86 --disable-x86-64 --disable-arm-v7a --disable-arm-v7a-neon

      - name: List generated AAR files
        run: ls -lh android/build/outputs/aar/

      - name: Upload AAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-kit-aar-arm64-v8a
          path: android/build/outputs/aar/*.aar

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log-arm64-v8a
          path: android/build.log

      - name: Print build log
        if: always()
        run: cat android/build.log || cat build.log || echo "No build.log found"

      - name: Print ffbuild config log (if failed)
        if: failure()
        run: |
          if [ -f ./src/ffmpeg/ffbuild/config.log ]; then
            tail -50 ./src/ffmpeg/ffbuild/config.log
          fi
